{"version":3,"sources":["Map/Components/ControlPanel/index.jsx","Map/Components/LayerPanel/index.jsx","Map/Components/SearchPanel/searchInput.jsx","Icons/Pin.jsx","Map/Components/SearchPanel/index.jsx","Map/Components/FixedPoint/index.jsx","Map/index.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["ControlPanel","props","useState","view3d","setView3d","label","className","disabledLabel","showCompass","visualizePitch","zoomInLabel","zoomOutLabel","compassLabel","capturePointerMove","onClick","React","memo","categories","MAP_STYLES","name","desc","icon","cssClass","nextLayer","MAP_LAYERS","layerSelector","background","water","parks","buildings","roads","labels","colorClass","line","fill","symbol","LayerPanel","visibility","setVisibility","showListLayer","setShowListLayer","showAdvancedSetting","setShowAdvancedSetting","color","setColor","currentLayer","setCurrentLayer","useEffect","onChange","mapStyle","fromJS","LIGHT","STREET","SATELLITE","DARK","NAVIGATION_LIGHT","NAVIGATION_DARK","layers","get","filter","layer","id","every","test","map","type","category","find","setIn","set","getMapStyle","onColorChange","value","onMouseEnter","onMouseLeave","prevLayer","undefined","selectCurrentLayer","alt","src","x","checked","evt","target","disabled","SearchInput","searchRef","useRef","replace","c","crypto","getRandomValues","Uint8Array","toString","locationData","location","setLocation","elm","document","querySelector","top","plusOffsetTop","style","ref","containerRef","mapRef","placeholder","goongApiAccessToken","onResult","e","data","newLocation","latitude","result","geometry","lat","longitude","lng","index","onSearchResult","inputValue","showYourLocation","navigator","geolocation","processLocation","position","a","coords","validateSearchInput","getCurrentPosition","alert","setYourLocation","Pin","size","height","viewBox","stroke","d","y","textColor","baseClient","GoongClient","accessToken","directionService","GoongDirections","SearchPanel","stopPoints","setStopPoints","routes","setRoutes","viewDirection","setViewDirection","vehicle","setVehicle","changeVehicle","getRoute","origin","destination","getDirections","alternatives","send","resFastest","body","selected","getDirection","routesData","length","push","stopPointsData","arr","stringValidate","Set","from","timeout","ms","Promise","resolve","setTimeout","splice","onSearch","removeStopPoint","changeDirection","isDirection","components","forEach","points","offsetTop","offsetLeft","renderMaker","route","selectedRoute","geoJSON","Polyline","toGeoJSON","overview_polyline","firstPoint","coordinates","lastPoint","idRoute","renderRoute","title","hasUnFill","renderStopPoint","stopPontsData","swapStopPoints","indexParent","indexChild","selectRoute","legs","distance","text","duration","renderDirections","FixedPoint","listPoint","selectedPoint","setSelectedPoint","point","class","width","frameborder","allow","allowfullscreen","Map","zoom","bearing","pitch","viewport","setViewport","setMapStyle","onViewportChange","attributionControl","searchData","transitionDuration","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.025baf12.chunk.js","sourcesContent":["import './index.scss';\n\nimport React, { useState } from 'react';\n\nimport { FullscreenControl, GeolocateControl, NavigationControl, ScaleControl, Layer } from '@goongmaps/goong-map-react';\n\n\nfunction ControlPanel(props) {\n\n  const [view3d, setView3d] = useState(false);\n\n  return (\n    <>\n      <FullscreenControl\n        label=\"Xem toàn màn hình\"\n        className=\"control-fullscreen\" />\n      <GeolocateControl\n        label=\"Vị trí của tôi\"\n        disabledLabel=\"Vị trí của bạn không xác định được\"\n        className=\"control-location\" />\n      <NavigationControl\n        showCompass={true}\n        visualizePitch={false}\n        zoomInLabel=\"Phóng to\"\n        zoomOutLabel=\"Thu nhỏ\"\n        compassLabel=\"Thay đổi góc nhìn\"\n        capturePointerMove={true}\n        className=\"control-navigation\" />\n      <ScaleControl className='control-scale' />\n      {/* 3D buliding */}\n      <button className=\"mapboxgl-ctrl-icon icon-3d\" onClick={() => setView3d(!view3d)}>\n        <label>{view3d ? '2D' : '3D'}</label>\n      </button>\n\n      {view3d && <Layer  {\n        ...{\n          'id': 'building',\n          'source': 'composite',\n          'source-layer': 'VN_Building',\n          'filter': ['==', 'extrude', 'true'],\n          'type': 'fill-extrusion',\n          'minzoom': 15,\n          'paint': {\n            'fill-extrusion-color': '#aaa',\n\n            // use an 'interpolate' expression to add a smooth transition effect to the\n            // buildings as the user zooms in\n            'fill-extrusion-height': [\n              'interpolate',\n              ['linear'],\n              ['zoom'],\n              15,\n              0,\n              15.05,\n              ['get', 'height']\n            ],\n            'fill-extrusion-base': [\n              'interpolate',\n              ['linear'],\n              ['zoom'],\n              15,\n              0,\n              15.05,\n              ['get', 'min_height']\n            ],\n            'fill-extrusion-opacity': 0.6\n          }\n        }\n      } />}\n    </>\n  );\n}\n\nexport default React.memo(ControlPanel);","import './index.scss';\n\nimport React from 'react';\n\nimport { useEffect, useState } from 'react';\n\nimport DARK from './data/goong_map_dark.json';\nimport LIGHT from './data/goong_light_v2.json';\nimport NAVIGATION_DARK from './data/navigation_night.json';\nimport NAVIGATION_LIGHT from './data/navigation_day.json';\nimport SATELLITE from './data/satellite.json'\nimport STREET from './data/goong_map_web.json'\nimport { fromJS } from 'immutable';\n\nconst categories = ['labels', 'roads', 'buildings', 'parks', 'water', 'background'];\n\nconst MAP_STYLES = [\n  {\n    name: 'Light',\n    desc: 'Sáng',\n    icon: 'images/layer/light.png',\n    cssClass: 'light',\n    nextLayer: {\n      name: 'Satellite',\n      desc: 'Vệ tinh',\n      icon: 'images/layer/satellite.png',\n      cssClass: 'light',\n    }\n  },\n  {\n    name: 'Dark',\n    desc: 'Tối',\n    icon: 'images/layer/dark.png',\n    cssClass: 'dark',\n    nextLayer: {\n      name: 'Satellite',\n      desc: 'Vệ tinh',\n      icon: 'images/layer/satellite.png',\n      cssClass: 'light',\n    }\n  },\n  {\n    name: 'Street',\n    desc: 'Đường phố',\n    icon: 'images/layer/street.png',\n    cssClass: 'light',\n    nextLayer: {\n      name: 'Satellite',\n      desc: 'Vệ tinh',\n      icon: 'images/layer/satellite.png',\n      cssClass: 'light',\n    }\n  },\n  {\n    name: 'N-Light',\n    desc: 'N-Light',\n    icon: 'images/layer/navigationLight.png',\n    cssClass: 'light',\n    nextLayer: {\n      name: 'Satellite',\n      desc: 'Vệ tinh',\n      icon: 'images/layer/satellite.png',\n      cssClass: 'light',\n    }\n  },\n  {\n    name: 'N-Dark',\n    desc: 'N-Dark',\n    icon: 'images/layer/navigationDark.png',\n    cssClass: 'dark',\n    nextLayer: {\n      name: 'Satellite',\n      desc: 'Vệ tinh',\n      icon: 'images/layer/satellite.png',\n      cssClass: 'light',\n    }\n  },\n];\n\nconst MAP_LAYERS = [\n  {\n    name: 'labels',\n    desc: 'Địa điểm',\n    icon: 'images/layer/layer/labels.png',\n  },\n  {\n    name: 'roads',\n    desc: 'Đường phố',\n    icon: 'images/layer/layer/roads.png',\n  },\n  {\n    name: 'buildings',\n    desc: 'Toà nhà',\n    icon: 'images/layer/layer/buildings.png',\n  },\n  {\n    name: 'parks',\n    desc: 'Công viên',\n    icon: 'images/layer/layer/parks.png',\n  },\n  {\n    name: 'water',\n    desc: 'Sông ngòi',\n    icon: 'images/layer/layer/water.png',\n  },\n  {\n    name: 'background',\n    desc: 'Nền',\n    icon: 'images/layer/layer/background.png',\n  },\n\n];\n// Layer id patterns by category\nconst layerSelector = {\n  background: /background/,\n  water: /water/,\n  parks: /park/,\n  buildings: /building/,\n  roads: /bridge|road|tunnel/,\n  labels: /label|place|poi/\n};\n\n// Layer color class by type\nconst colorClass = {\n  line: 'line-color',\n  fill: 'fill-color',\n  background: 'background-color',\n  symbol: 'text-color'\n};\n\nfunction getMapStyle({ visibility, color, currentLayer }) {\n  let mapStyle;\n  switch (currentLayer.name) {\n    case 'Light':\n      mapStyle = fromJS(LIGHT);\n      break;\n    case 'Street':\n      mapStyle = fromJS(STREET);\n      break;\n    case 'Satellite':\n      mapStyle = fromJS(SATELLITE);\n      break;\n    case 'Dark':\n      mapStyle = fromJS(DARK);\n      break;\n    case 'N-Light':\n      mapStyle = fromJS(NAVIGATION_LIGHT);\n      break;\n    case 'N-Dark':\n      mapStyle = fromJS(NAVIGATION_DARK);\n      break;\n    default:\n      mapStyle = fromJS(LIGHT);\n      break;\n  }\n  const mapLayer = mapStyle.get('layers');\n  const layers = mapLayer\n    .filter(layer => {\n      const id = layer.get('id');\n      return categories.every(name => visibility[name] || !layerSelector[name].test(id));\n    })\n    .map(layer => {\n      const id = layer.get('id');\n      const type = layer.get('type');\n      const category = categories.find(name => layerSelector[name].test(id));\n      if (category && colorClass[type]) {\n        if (color[category])\n          return layer.setIn(['paint', colorClass[type]], color[category]);\n      }\n      return layer;\n    });\n\n  return mapStyle.set('layers', layers);\n}\n\nfunction LayerPanel(props) {\n  const [visibility, setVisibility] = useState({\n    water: true,\n    parks: true,\n    buildings: true,\n    roads: true,\n    labels: true,\n    background: true\n  });\n  const [showListLayer, setShowListLayer] = useState(false);\n  const [showAdvancedSetting, setShowAdvancedSetting] = useState(false);\n  const [color, setColor] = useState({\n    water: null,\n    parks: null,\n    buildings: null,\n    roads: null,\n    labels: null,\n    background: null\n  });\n  const [currentLayer, setCurrentLayer] = useState({\n    name: 'Street',\n    desc: 'Đường phố',\n    icon: 'images/layer/street.png',\n    cssClass: 'light',\n    nextLayer: {\n      name: 'Satellite',\n      desc: 'Vệ tinh',\n      icon: 'images/layer/satellite.png',\n      cssClass: 'light',\n    }\n  });\n  useEffect(() => {\n    props.onChange(getMapStyle({ visibility, color, currentLayer }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visibility, color, currentLayer]);\n\n  const onColorChange = (name, value) => {\n    setColor({ ...color, [name]: value });\n  };\n\n  const onVisibilityChange = (name, value) => {\n    setVisibility({ ...visibility, [name]: value });\n  };\n\n  const onLayerChange = (layer) => {\n    setCurrentLayer(layer);\n    setVisibility({\n      water: true,\n      parks: true,\n      buildings: true,\n      roads: true,\n      labels: true,\n      background: true\n    });\n    onColorChange({\n      water: null,\n      parks: null,\n      buildings: null,\n      roads: null,\n      labels: null,\n      background: null\n    });\n  };\n\n  const selectCurrentLayer = () => {\n    const nextLayer = {\n      ...currentLayer.nextLayer\n    };\n    const prevLayer = {\n      ...currentLayer,\n      nextLayer: undefined\n    }\n    setCurrentLayer({\n      ...nextLayer,\n      nextLayer: {\n        ...prevLayer\n      }\n    });\n\n  }\n\n  return (\n    <div className={'layer-panel ' + currentLayer.cssClass} onMouseEnter={() => setShowListLayer(true)} onMouseLeave={() => {\n      setShowListLayer(false);\n      setShowAdvancedSetting(false)\n    }}>\n      <div className=\"selected-layer\" onClick={() => selectCurrentLayer()}>\n        <div className=\"layer-block\">\n          <img alt={currentLayer.nextLayer?.desc} src={currentLayer.nextLayer?.icon} />\n          <span>{currentLayer.nextLayer?.desc}</span>\n        </div>\n      </div>\n      {/* List Layer */}\n      {showListLayer &&\n        <div className=\"list-layer\">\n\n          {currentLayer.name === 'Satellite' && MAP_STYLES.map(x => (\n            <div key={x.name} className=\"layer-block\" onClick={() => onLayerChange(x)} >\n              <img alt={x.name} src={x.icon} />\n              <span>{x.name}</span>\n            </div>\n          ))}\n          {\n            true &&\n            <div className=\"layer-block advanced-setting\" onClick={() => setShowAdvancedSetting(!showAdvancedSetting)} >\n              <img alt={'Hiển thị'} src={'images/layer/config.png'} />\n              <span>{'Hiển thị'}</span>\n            </div>\n          }\n\n        </div>}\n      {/* Advanced Layer */}\n      {showAdvancedSetting && <div className=\"advanced-layer\">\n        {MAP_LAYERS.map(layer => (\n          <div key={layer.name} className=\"input\">\n            <div className=\"setting-block\">\n              <input\n                type=\"checkbox\"\n                checked={visibility[layer.name]}\n                onChange={evt => onVisibilityChange(layer.name, evt.target.checked)}\n              />\n              <label>{layer.desc}</label>\n\n              <input\n                type=\"color\"\n                value={color[layer.name]}\n                disabled={!visibility[layer.name]}\n                onChange={evt => onColorChange(layer.name, evt.target.value)} />\n            </div>\n\n\n          </div>\n        ))}\n      </div>}\n     \n\n\n    </div>\n  );\n}\n\nexport default React.memo(LayerPanel);","/* eslint-disable no-mixed-operators */\n\nimport React, { useRef, useState } from 'react';\nimport Geocoder from '@goongmaps/goong-geocoder-react';\nimport { useEffect } from 'react';\n\nconst GEOCODER_KEY = 'fwWilEmSnpjjYJEQnB1JgwViOmF6sJ4F00h83eEZ';\nconst uuid = () => {\n    return ([1e7] + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n    );\n}\nfunction SearchInput(props) {\n    const searchRef = useRef(); \n    const id = \"id\" + uuid();\n    const [location, setLocation] = useState(props.locationData);\n    const onResult = (data) => {\n        const latitude = data?.result?.result?.geometry.location.lat;\n        const longitude = data?.result?.result?.geometry.location.lng;\n        const name = data?.result?.result?.name;\n\n        const newLocation = {\n            latitude,\n            longitude,\n            name,\n            index: props.index\n        }\n        setLocation(newLocation);  \n        props.onSearchResult(newLocation);\n    }\n    const setYourLocation = () => {\n        if (navigator.geolocation) {\n            const processLocation = async (position) => {\n                const latitude = position?.coords?.latitude;\n                const longitude = position?.coords?.longitude;\n                const name = \"Vị trí của bạn\";\n                const newLocation = {\n                    latitude,\n                    longitude,\n                    name,\n                    index: props.index\n                }\n                if (props.validateSearchInput) {\n                    if (props.validateSearchInput(newLocation, props.index)) {\n                        setLocation(newLocation);\n                        props.onSearchResult(newLocation);\n                    }\n                } else {\n                    setLocation(newLocation);\n                    props.onSearchResult(newLocation);\n                }\n            }\n            navigator.geolocation.getCurrentPosition(processLocation);\n\n        } else {\n            alert(\"Vui lòng bật dịch vụ vị trí trên thiết bị của bạn\");\n        }\n    }\n\n    useEffect(() => {\n        const elm = document.querySelector(\"#\" + id + \" .suggestions-wrapper .suggestions\");\n        const top = props.plusOffsetTop * 50 + 10;\n        elm.style.top = top + \"px\";\n    }, [id, props.plusOffsetTop]);\n    return (\n        <>\n            <div className={props.plusOffsetTop ? 'from-direction' : ''} ref={searchRef} key={id} id={id}></div>\n\n            <Geocoder\n                containerRef={searchRef}\n                mapRef={props.mapRef}\n                placeholder={props.placeholder}\n                goongApiAccessToken={GEOCODER_KEY}\n                onResult={(e) => onResult(e)}\n                inputValue={location?.name}\n            />\n            {props.showYourLocation &&\n                    <img onClick={() => setYourLocation()} className=\"your-location\" alt=\"your-location\" src=\"images/search/location.svg\" />\n\n            }\n        </>\n\n    );\n}\n\nexport default React.memo(SearchInput);","\nimport React from 'react';\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\n \n\nfunction Pin(props) {\n  const {size = 20} = props;\n\n  return (\n    <svg height={size} viewBox=\"0 0 24 24\" style={{\n      fill: props.color || '#d00',\n      stroke: 'none'\n    }}>\n      <path d={ICON} />\n      <text x=\"7.5\" y=\"15\" fill={props.textColor || '#fff'}>{props.name}</text>\n    </svg>\n  );\n}\n\nexport default React.memo(Pin);","import './index.scss';\nimport \"@goongmaps/goong-geocoder/dist/goong-geocoder.css\";\n\nimport React from 'react';\n\nimport { useRef, useState, useEffect } from 'react';\nimport GoongClient from '@goongmaps/goong-sdk';\nimport GoongDirections from '@goongmaps/goong-sdk/services/directions';\nimport SearchInput from './searchInput';\nimport { Marker, Source, Layer } from '@goongmaps/goong-map-react';\nimport Polyline from '@mapbox/polyline';\nimport Pin from '../../../Icons/Pin';\n// import GoongGeocoding from '@goongmaps/goong-sdk/services/geocoding';\nconst GEOCODER_KEY = 'fwWilEmSnpjjYJEQnB1JgwViOmF6sJ4F00h83eEZ';\n\n\nconst baseClient = GoongClient({ accessToken: GEOCODER_KEY });\nconst directionService = GoongDirections(baseClient);\n// const geocodingService = GoongGeocoding(baseClient);\n\nfunction SearchPanel(props) {\n  // Search holder \n  const searchRef = useRef();\n  const [stopPoints, setStopPoints] = useState([{}, {}]);\n  const [routes, setRoutes] = useState([]);\n  const [viewDirection, setViewDirection] = useState(false);\n  const [vehicle, setVehicle] = useState('car');\n\n  const changeVehicle = (vehicle) => {\n    setVehicle(vehicle);\n  }\n\n\n  useEffect(() => {\n    const getRoute = async (origin, destination) => {\n      if (origin?.latitude && destination?.latitude) {\n        if (origin.latitude === destination.latitude &&\n          origin.longitude === destination.longitude\n        ) {\n          alert(\"Điểm bắt đầu và kết thúc trùng nhau!\")\n        }\n        // Tìm nhanh nhất\n        const resFastest = await directionService.getDirections({\n          origin: `${origin?.latitude},${origin?.longitude}`,\n          destination: `${destination?.latitude},${destination?.longitude}`,\n          vehicle: vehicle,\n          type: 'fastest',//v.oneOf('fastest', 'shortest'),\n          alternatives: true\n        }).send();\n        const routes = resFastest?.body?.routes;\n        routes[0].selected = true;\n        const result = {\n          origin,\n          destination,\n          routes\n        };\n\n        return result;\n\n\n\n      }\n\n    }\n    const getDirection = async () => {\n      if (stopPoints.find(x => !x.name)) {\n        return null;\n      }\n      const routesData = [];\n      for (let index = 0; index < stopPoints.length; index++) {\n        if (index !== 0) {\n          routesData.push(await getRoute(stopPoints[index - 1], stopPoints[index]));\n\n        }\n      }\n      setRoutes(routesData);\n\n    }\n    getDirection();\n  }, [vehicle, stopPoints]);\n\n\n\n  const onAddDestination = () => {\n    setStopPoints([...stopPoints, {}])\n  }\n  const validateSearchInput = (location, index) => {\n    const stopPointsData = [...stopPoints];\n    stopPointsData[index] = location;\n    const stringValidate = stopPointsData.map(x => `[${x.latitude}${x.longitude}]`);\n    function checkIfDuplicateExists(arr) {\n      return new Set(arr).size !== arr.length\n    }\n    if (checkIfDuplicateExists(stringValidate)) {\n      alert(\"Vị trí các điểm bị trùng\")\n      return false;\n    }\n    return true;\n  }\n  const onSearchResult = async (location, from, index) => {\n    if (from === 'search') {\n      setStopPoints([\n        { ...location, index: 1 }, {}\n      ])\n    } else {\n      const stopPointsData = [...stopPoints];\n      stopPointsData.splice(index, 1, { ...location });\n      function timeout(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n      }\n      await timeout(500);\n      setStopPoints(stopPointsData);\n\n    }\n    props.onSearch({ ...location })\n  }\n  const removeStopPoint = async (index) => {\n    const stopPointsData = [...stopPoints];\n    stopPointsData.splice(index, 1);\n    function timeout(ms) {\n      return new Promise(resolve => setTimeout(resolve, ms));\n    }\n    await timeout(500);\n    setStopPoints(stopPointsData);\n  }\n\n  const renderStopPoint = () => {\n    const components = [];\n    stopPoints.forEach((points, index) => {\n      components.push(\n        <div className=\"search-input-direction\" key={`${points?.latitude}${points?.longitude}${index}`}>\n          <div className=\"points-btn\">\n            <Pin size={20} color=\"white\" textColor=\"#1a73e8\" name={index + 1} />\n          </div>\n          <SearchInput\n            key={`${points?.latitude}${points?.longitude}${index}input`}\n            mapRef={props.mapRef}\n            locationData={points}\n            placeholder={\"Tìm kiếm địa điểm\"}\n            onSearchResult={(location) => onSearchResult(location, 'direction', index)}\n            validateSearchInput={validateSearchInput}\n            index={index}\n            plusOffsetTop={stopPoints.length - index}\n            showYourLocation\n          />\n          {stopPoints.length > 2 && <div className=\"lk-btn\" onClick={() => removeStopPoint(index)}>\n            <img alt=\"delete\" className=\"delete-points close\" src=\"images/search/delete.png\" />\n          </div>\n          }\n        </div>\n      )\n    });\n    const hasUnFill = stopPoints.find(x => !x.name);\n    return <div>\n      {components}\n      {!hasUnFill &&\n        <div className=\"search-input-direction\" onClick={() => onAddDestination()}>\n          <div className=\"add points-btn\">\n            <img alt=\"add\" src=\"images/search/add.png\" />\n          </div>\n          <div className=\"add-points-lbl\">Thêm điểm đến</div>\n        </div>\n      }\n\n    </div>;\n  }\n\n  const renderMaker = () => {\n    const components = [];\n    stopPoints.forEach((points) => {\n      if (points?.latitude && points?.longitude) {\n        components.push(\n          <Marker key={`${points.latitude},${points.longitude}`}\n            offsetTop={-20}\n            offsetLeft={-10}\n            latitude={points.latitude} longitude={points.longitude} >\n            <Pin size={20} name={points.index + 1} />\n          </Marker>\n        )\n      }\n\n    });\n    return <>\n      {components}\n    </>;\n  }\n\n  const renderRoute = () => {\n    const components = [];\n    routes.forEach((route, index) => {\n      // Get selected route \n      const selectedRoute = route.routes.find(x => x.selected) || route.routes[0];\n      const geoJSON = Polyline.toGeoJSON(selectedRoute.overview_polyline.points);\n      const firstPoint = geoJSON.coordinates[0];\n      const lastPoint = geoJSON.coordinates[geoJSON.coordinates.length - 1];\n      const idRoute = `route${index}`;\n      // Walk to first\n      components.push(\n        <Source id={`${idRoute}1`} key={`${idRoute}1`} type=\"geojson\" data={{\n          type: \"LineString\",\n          coordinates: [\n            [route?.origin?.longitude, route?.origin?.latitude],\n            firstPoint,\n          ],\n        }}  >\n          <Layer  {...{\n            'id': `${idRoute}1`,\n            'key': `${idRoute}1`,\n            'type': 'line',\n            'layout': {\n              'line-join': 'round',\n              'line-cap': 'round'\n            },\n            'paint': {\n              'line-color': '#0f0f0f',\n              'line-width': 3,\n              'line-opacity': 1,\n              'line-dasharray': [0.1, 3]\n            },\n          }} />\n        </Source>\n      )\n      //  Last walk to destination\n      components.push(\n        <Source id={`${idRoute}2`} key={`${idRoute}2`} type=\"geojson\" data={{\n          type: \"LineString\",\n          coordinates: [\n            lastPoint,\n            [route?.destination?.longitude, route?.destination?.latitude],\n          ],\n        }}  >\n          <Layer  {...{\n            'id': `${idRoute}2`,\n            'key': `${idRoute}2`,\n            'type': 'line',\n            'layout': {\n              'line-join': 'round',\n              'line-cap': 'round'\n            },\n            'paint': {\n              'line-color': '#0f0f0f',\n              'line-width': 3,\n              'line-opacity': 1,\n              'line-dasharray': [0.1, 3]\n            },\n          }} />\n        </Source>\n      )\n\n      // Main route\n      components.push(\n        <Source id={`${idRoute}3`} key={`${idRoute}3`} type=\"geojson\" data={geoJSON}  >\n          <Layer  {...{\n            'id': `${idRoute}3`,\n            'key': `${idRoute}3`,\n            'type': 'line',\n            'layout': {\n              'line-join': 'round',\n              'line-cap': 'round'\n            },\n            'paint': {\n              'line-color': '#1e88e5',\n              'line-width': 3,\n              'line-opacity': 1,\n            },\n          }} />\n        </Source>\n      )\n    });\n\n    return <>\n      {components}\n    </>;\n  }\n  const changeDirection = (isDirection) => {\n    setViewDirection(isDirection);\n  }\n  const swapStopPoints = () => {\n    const stopPontsData = [stopPoints[1], stopPoints[0]];\n    setStopPoints(stopPontsData);\n  }\n  const selectRoute = (indexParent,indexChild) => {\n    const routesData = [...routes];\n    routesData[indexParent].routes.forEach((x, index) => {\n      routesData[indexParent].routes[index].selected = false;\n   });\n   routesData[indexParent].routes[indexChild].selected = true;\n   setRoutes(routesData);\n  }\n  const renderDirections = () => {\n    const components = [];\n    routes.forEach((route, index) => {\n      const indexParent = index;\n      components.push(\n        <div className=\"route-group-info\" key={`route-group-info${index}`}>\n          {\n            stopPoints.length > 2 &&\n            <label className=\"route\">\n              Di chuyển từ&nbsp;\n              <strong>{route.origin.name}</strong>\n              &nbsp;đến&nbsp;\n              <strong>{route.destination.name}</strong>\n            </label>\n          }\n\n          <ul >\n            {route.routes.map((x,index ) => (\n              <li key={`li${index}`} className={x.selected ? 'active' : ''} onClick={() => selectRoute(indexParent,index)}>\n                Quãng đường:&nbsp;<strong>{x.legs[0]?.distance.text}</strong>  <br />\n                Thời gian:&nbsp;<strong>{x.legs[0]?.duration.text}</strong>\n                <div className=\"navigate-btn\">\n                  <img alt=\"navigate\" src=\"images/search/navigate.png\" />\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )\n\n    });\n\n    return <>\n      {components}\n    </>;\n  }\n\n  return (\n    <>\n      {renderMaker()}\n      {renderRoute()}\n      <div className={'search-panel '} >\n        {!viewDirection &&\n          <div className=\"search-input\" >\n            <div ref={searchRef} key=\"geocoder\" id=\"geocoder\"></div>\n            <SearchInput\n              mapRef={props.mapRef}\n              locationData={stopPoints[0]}\n              placeholder={\"Tìm kiếm địa điểm\"}\n              onSearchResult={(location) => onSearchResult(location, 'search')}\n            />\n            <div className=\"direction\" title=\"Chỉ đường\" onClick={() => changeDirection(true)}>\n              <img alt=\"direction\" src=\"images/search/direction.png\" />\n            </div>\n          </div>\n        }\n        {viewDirection && <>\n          <div className=\"search-direction\">\n            <div className=\"top-panel\">\n              <div className={(vehicle === 'car' ? 'active' : '') + ' img-btn vehicle car'} title=\"Ô tô\" onClick={() => changeVehicle('car')}>\n                <img alt=\"car\" src=\"images/search/car.png\" />\n              </div>\n              <div className={(vehicle === 'bike' ? 'active' : '') + ' img-btn vehicle bike'} title=\"Xe máy\" onClick={() => changeVehicle('bike')}>\n                <img alt=\"bike\" src=\"images/search/bike.png\" />\n              </div>\n              <div className={(vehicle === 'taxi' ? 'active' : '') + ' img-btn vehicle taxi'} title=\"Taxi\" onClick={() => changeVehicle('taxi')}>\n                <img alt=\"taxi\" src=\"images/search/taxi.png\" />\n              </div>\n              <div className={(vehicle === 'truct' ? 'active' : '') + ' img-btn vehicle truct'} title=\"Xe container\" onClick={() => changeVehicle('truct')}>\n                <img alt=\"truct\" src=\"images/search/truct.png\" />\n              </div>\n              <div className={(vehicle === 'hd' ? 'active' : '') + ' img-btn vehicle hd'} title=\"HD\" onClick={() => changeVehicle('hd')}>\n                <img alt=\"hd\" src=\"images/search/hd.png\" />\n              </div>\n              <div className=\"divider\"></div>\n              <div className=\"close close-direction\" onClick={() => changeDirection(false)}>\n\n              </div>\n            </div>\n            <div className=\"body-panel\">\n              {renderStopPoint()}\n              {stopPoints.length === 2 && <div className=\"img-btn swap-direction\" onClick={() => swapStopPoints()}>  <img alt=\"swap\" src=\"images/search/swap.png\" /></div>}\n            </div>\n          </div>\n          <div className=\"search-direction-footer\">\n            {renderDirections()}\n          </div>\n        </>}\n      </div>\n    </>\n\n  );\n}\n\nexport default React.memo(SearchPanel);","/* eslint-disable jsx-a11y/iframe-has-title */\nimport \"./index.scss\";\n\nimport React, { useState } from \"react\";\nimport { Marker } from \"@goongmaps/goong-map-react\";\nimport Pin from '../../../Icons/Pin';\nimport Flag from '../../../Icons/Flag';\n\nfunction FixedPoint(props) {\n  const [listPoint, setlistPoint] = useState([\n    {\n      latitude: 20.253398399950605,\n      longitude: 105.91817523288758,\n      name: \"Tràng An\",\n      icon: \"images/flag.svg\",\n      src: \"https://www.youtube.com/embed/_7RmqaLyulw\",\n    },\n    {\n      latitude: 20.27674161671585,\n      longitude: 105.86561642945021,\n      name: \"Chùa Bái Đính\",\n      icon: \"images/flag.svg\",\n      src: \"https://www.youtube.com/embed/_BoAv6YaTEU\",\n    },\n    {\n      latitude: 20.263647073751763,\n      longitude: 105.98287232920458,\n      name: \"Chùa non nước\",\n      icon: \"images/flag.svg\",\n      src: \"https://www.youtube.com/embed/WcdBObqok30\",\n    },\n  ]);\n  const [selectedPoint, setSelectedPoint] = useState();\n\n  return (\n    <>\n      {listPoint.map((point) => (\n        <Marker\n          key={`${point.latitude},${point.longitude}`}\n          offsetTop={-20}\n          offsetLeft={-10}\n          latitude={point.latitude}\n          longitude={point.longitude}\n        >\n          <div onClick={() => setSelectedPoint(point)}>\n\n            <Pin size={40} color=\"#1a73e8\" textColor=\"#ffffff\" name={''} />\n          </div>\n        </Marker>\n      ))}\n      {selectedPoint && (\n        <div class=\"detail-point-modal\">\n\n          <div class=\"header-modal\">\n            {selectedPoint.name}\n            <span class=\"close-btn\" onClick={() => setSelectedPoint(null)}>\n            </span>\n          </div>\n          <div className=\"body-modal\">\n            <iframe\n              width=\"100%\"\n              height=\"100%\"\n              src={selectedPoint.src}\n              title=\"YouTube video player\"\n              frameborder=\"0\"\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n              allowfullscreen\n            ></iframe>\n          </div>\n\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default React.memo(FixedPoint);\n","import '@goongmaps/goong-js/dist/goong-js.css';\nimport './index.css';\nimport React from 'react';\nimport { useRef, useState } from 'react';\n\nimport ReactMapGL, {\n    } from '@goongmaps/goong-map-react';\n\nimport ControlPanel from './Components/ControlPanel/index';\nimport LayerPanel from './Components/LayerPanel/index';\nimport SearchPanel from './Components/SearchPanel/index';\nimport FixedPoint from './Components/FixedPoint';\n\nconst GOONG_MAPTILES_KEY = '1YVQoTkZWUdNrHJOUf3jEXI1CxlWqvUfghcn6tRa';\n\nfunction Map() {\n    const mapRef = useRef();\n    const [viewport, setViewport] = useState({\n        latitude: 20.253398399950605,\n        longitude: 105.91817523288758,\n        zoom: 13,\n        bearing: 0,\n        pitch: 0\n    });\n    const [mapStyle, setMapStyle] = useState('');\n\n    const onSearch = (searchData) => {\n        const geocoderDefaultOverrides = { transitionDuration: 1000 }\n        setViewport({\n            ...viewport,\n            ...searchData,\n            ...geocoderDefaultOverrides\n        });\n    }\n    return (\n        <div className=\"map-box\">\n            <ReactMapGL\n                ref={mapRef}\n                {...viewport}\n                width=\"100%\"\n                height=\"100%\"\n                mapStyle={mapStyle}\n                onViewportChange={setViewport}\n                goongApiAccessToken={GOONG_MAPTILES_KEY}\n                attributionControl={false}\n            >\n                <ControlPanel />\n                <LayerPanel onChange={setMapStyle} />\n                <SearchPanel mapRef={mapRef} onSearch={onSearch} />\n                <FixedPoint/>\n            </ReactMapGL>\n        </div>\n\n    );\n}\nexport default Map;","\nimport './App.css';\n\nimport React from 'react';\nimport Map from './Map/index';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Map/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\n\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}